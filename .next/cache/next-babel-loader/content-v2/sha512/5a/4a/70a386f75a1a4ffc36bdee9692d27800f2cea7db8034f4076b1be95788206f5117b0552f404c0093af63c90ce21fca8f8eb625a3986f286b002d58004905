{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Java\\\\Projetos\\\\practice\\\\nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\n// import { useEffect, useState } from \"react\";\nimport Head from 'next/head';\nimport { MongoClient } from \"mongodb\";\nimport MeetUpList from \"../components/meetups/MeetupList\";\nimport { Fragment } from 'react';\nconst DUMMY_MEETUP = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"http://unsplash.it/650/731\",\n  address: \"Some Address 5, 122423 City\",\n  discription: \"This is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"http://unsplash.it/651/730\",\n  address: \"Some Address 8, 938 City\",\n  discription: \"This is a second meetup\"\n}];\n\nconst HomePage = props => {\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\n  //   useEffect(() => {\n  //     setLoadedMeetups(DUMMY_MEETUP);\n  //   }, []);\n  //   return <MeetUpList meetups={loadedMeetups} />;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetUpList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:6Yr6OLouQpYH0x6e@cluster0.riuzs.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    // as this is a static page generation, we can ask server to re-generate the page using property name 'revalidate',\n    // for which we can pass value in seconds\n    revalidate: 120\n  };\n} // export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUP,\n//         },\n//     };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Java/Projetos/practice/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MongoClient","MeetUpList","Fragment","DUMMY_MEETUP","id","title","image","address","discription","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","description","_id","toString","revalidate"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,4BAHT;AAIEC,EAAAA,OAAO,EAAE,6BAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADmB,EAQnB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EAAE,4BAHT;AAIEC,EAAAA,OAAO,EAAE,0BAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARmB,CAArB;;AAgBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AAEA;AACA;AACA;AACA;AACA,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAIH,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,CAbD;;AAeA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADkB;AAEhCE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFgB;AAGhCD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHkB;AAIhCiB,QAAAA,WAAW,EAAED,MAAM,CAACC,WAJY;AAKhCnB,QAAAA,EAAE,EAAEkB,MAAM,CAACE,GAAP,CAAWC,QAAX;AAL4B,OAAb,CAAZ;AADJ,KADF;AAUL;AACA;AACAC,IAAAA,UAAU,EAAE;AAZP,GAAP;AAcD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAejB,QAAf","sourcesContent":["// import { useEffect, useState } from \"react\";\r\nimport Head from 'next/head';\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetUpList from \"../components/meetups/MeetupList\";\r\nimport { Fragment } from 'react';\r\nconst DUMMY_MEETUP = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image: \"http://unsplash.it/650/731\",\r\n    address: \"Some Address 5, 122423 City\",\r\n    discription: \"This is a first meetup\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image: \"http://unsplash.it/651/730\",\r\n    address: \"Some Address 8, 938 City\",\r\n    discription: \"This is a second meetup\",\r\n  },\r\n];\r\nconst HomePage = (props) => {\r\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n  //   useEffect(() => {\r\n  //     setLoadedMeetups(DUMMY_MEETUP);\r\n  //   }, []);\r\n  //   return <MeetUpList meetups={loadedMeetups} />;\r\n  return <Fragment>\r\n      <Head>\r\n          <title>React Meetups</title>\r\n      </Head>\r\n      <MeetUpList meetups={props.meetups} />;\r\n  </Fragment>\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:6Yr6OLouQpYH0x6e@cluster0.riuzs.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        description: meetup.description,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    // as this is a static page generation, we can ask server to re-generate the page using property name 'revalidate',\r\n    // for which we can pass value in seconds\r\n    revalidate: 120,\r\n  };\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUP,\r\n//         },\r\n//     };\r\n// }\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}