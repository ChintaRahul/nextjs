{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Java\\\\Projetos\\\\practice\\\\nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: \"http://unsplash.it/650/730\",\n    desc: \"This is a first meetup\",\n    title: \"First Meetup\",\n    addr: \"Some stree, 5, Some city\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://admin:6Yr6OLouQpYH0x6e@cluster0.riuzs.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:6Yr6OLouQpYH0x6e@cluster0.riuzs.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false // it means added all possible paths\n    // fallback: true,// indicate that we haven't added all paths, but it can use the other most used path for rendering other pages\n\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["C:/Java/Projetos/practice/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetailPage","getStaticProps","context","meetupId","params","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","close","props","meetupData","getStaticPaths","meetups","find","toArray","paths","map","meetup","toString","fallback"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAC,4BADN;AAEE,IAAA,IAAI,EAAC,wBAFP;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AACA,QAAME,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,cAAc,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAET;AAAP,GAA1B,CAA7B;AACAE,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEL;AADP;AADF,GAAP;AAKD;AAED,OAAO,eAAeM,cAAf,GAAgC;AACrC,QAAMX,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMQ,OAAO,GAAG,MAAMT,iBAAiB,CAACU,IAAlB,CAAuB,EAAvB,EAA2B;AAAEN,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCO,OAAvC,EAAtB;AACAd,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLO,IAAAA,KAAK,EAAEH,OAAO,CAACI,GAAR,CAAaC,MAAD,KAAa;AAC9BlB,MAAAA,MAAM,EAAE;AAAED,QAAAA,QAAQ,EAAEmB,MAAM,CAACV,GAAP,CAAWW,QAAX;AAAZ;AADsB,KAAb,CAAZ,CADF;AAILC,IAAAA,QAAQ,EAAE,KAJL,CAIY;AACjB;;AALK,GAAP;AAOD;AAED,eAAexB,gBAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetailPage = () => {\r\n  return (\r\n    <MeetupDetail\r\n      img=\"http://unsplash.it/650/730\"\r\n      desc=\"This is a first meetup\"\r\n      title=\"First Meetup\"\r\n      addr=\"Some stree, 5, Some city\"\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:6Yr6OLouQpYH0x6e@cluster0.riuzs.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:6Yr6OLouQpYH0x6e@cluster0.riuzs.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n    fallback: false, // it means added all possible paths\r\n    // fallback: true,// indicate that we haven't added all paths, but it can use the other most used path for rendering other pages\r\n  };\r\n}\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}